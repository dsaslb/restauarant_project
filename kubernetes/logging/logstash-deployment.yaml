apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-deployment
  namespace: monitoring
  labels:
    app: logstash
spec:
  replicas: 2
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:8.11.0
        ports:
        - containerPort: 5044
          name: beats
        - containerPort: 5000
          name: tcp
        - containerPort: 5000
          name: udp
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://elasticsearch-service.monitoring.svc.cluster.local:9200"
        resources:
          requests:
            memory: "1Gi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /_node/stats
            port: 9600
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /_node/stats
            port: 9600
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: logstash-config
          mountPath: /usr/share/logstash/pipeline
        - name: logstash-logs
          mountPath: /usr/share/logstash/logs
      volumes:
      - name: logstash-config
        configMap:
          name: logstash-config
      - name: logstash-logs
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: monitoring
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    xpack.monitoring.enabled: false
    
  pipelines.yml: |
    - pipeline.id: main
      path.config: "/usr/share/logstash/pipeline"
      
  main.conf: |
    input {
      beats {
        port => 5044
      }
      tcp {
        port => 5000
        codec => json
      }
      udp {
        port => 5000
        codec => json
      }
    }
    
    filter {
      if [kubernetes] {
        mutate {
          add_field => { "cluster" => "your_program-cluster" }
        }
      }
      
      if [service] {
        mutate {
          add_field => { "service_type" => "microservice" }
        }
      }
      
      date {
        match => [ "timestamp", "ISO8601" ]
        target => "@timestamp"
      }
    }
    
    output {
      elasticsearch {
        hosts => ["elasticsearch-service.monitoring.svc.cluster.local:9200"]
        index => "your_program-logs-%{+YYYY.MM.dd}"
        template_name => "your_program-logs"
        template => {
          "index_patterns" => ["your_program-logs-*"]
          "settings" => {
            "number_of_shards" => 1
            "number_of_replicas" => 1
          }
          "mappings" => {
            "properties" => {
              "@timestamp" => { "type" => "date" }
              "message" => { "type" => "text" }
              "level" => { "type" => "keyword" }
              "service" => { "type" => "keyword" }
              "cluster" => { "type" => "keyword" }
              "service_type" => { "type" => "keyword" }
            }
          }
        }
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: logstash-service
  namespace: monitoring
  labels:
    app: logstash
spec:
  type: ClusterIP
  ports:
  - port: 5044
    targetPort: 5044
    protocol: TCP
    name: beats
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: tcp
  - port: 5000
    targetPort: 5000
    protocol: UDP
    name: udp
  selector:
    app: logstash 
