apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-deployment
  namespace: your_program-system
  labels:
    app: user-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
        version: v1
    spec:
      containers:
      - name: user-service
        image: your_program-user:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5001
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: USER_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: your_program-app-config
              key: USER_SERVICE_PORT
        - name: USER_DB_PATH
          valueFrom:
            configMapKeyRef:
              name: your_program-app-config
              key: USER_DB_PATH
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: your_program-app-secrets
              key: SECRET_KEY
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: your_program-app-secrets
              key: JWT_SECRET
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: your_program-app-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: your_program-app-config
              key: POSTGRES_PORT
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: your_program-app-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: your_program-app-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: your_program-app-secrets
              key: POSTGRES_PASSWORD
        resources:
          requests:
            memory: "256Mi"
            cpu: "150m"
          limits:
            memory: "512Mi"
            cpu: "300m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: user-data
          mountPath: /app
        - name: user-logs
          mountPath: /app/logs
      volumes:
      - name: user-data
        persistentVolumeClaim:
          claimName: user-pvc
      - name: user-logs
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: user-pvc
  namespace: your_program-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: user-hpa
  namespace: your_program-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-deployment
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80 
