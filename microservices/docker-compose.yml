version: '3.8'

services:
  # API Gateway
  gateway:
    build: ./gateway-service
    ports:
      - "5000:5000"
    environment:
      - GATEWAY_PORT=5000
      - USER_SERVICE_URL=http://user:5001
      - STAFF_SERVICE_URL=http://staff:5002
      - INVENTORY_SERVICE_URL=http://inventory:5003
      - ORDER_SERVICE_URL=http://order:5004
      - ANALYTICS_SERVICE_URL=http://analytics:5005
      - IOT_SERVICE_URL=http://iot:5006
      - NOTIFICATION_SERVICE_URL=http://notification:5007
      - AI_SERVICE_URL=http://ai:5008
    depends_on:
      - user
      - staff
      - inventory
      - order
      - analytics
      - iot
      - notification
      - ai
    networks:
      - microservices-network

  # User Service
  user:
    build: ./user-service
    ports:
      - "5001:5001"
    environment:
      - USER_SERVICE_PORT=5001
      - SECRET_KEY=your-secret-key-here
      - USER_DB_PATH=/app/user_service.db
    volumes:
      - user_data:/app
    networks:
      - microservices-network

  # Staff Service
  staff:
    build: ./staff-service
    ports:
      - "5002:5002"
    environment:
      - STAFF_SERVICE_PORT=5002
      - STAFF_DB_PATH=/app/staff_service.db
    volumes:
      - staff_data:/app
    networks:
      - microservices-network

  # Inventory Service
  inventory:
    build: ./inventory-service
    ports:
      - "5003:5003"
    environment:
      - INVENTORY_SERVICE_PORT=5003
      - INVENTORY_DB_PATH=/app/inventory_service.db
    volumes:
      - inventory_data:/app
    networks:
      - microservices-network

  # Order Service
  order:
    build: ./order-service
    ports:
      - "5004:5004"
    environment:
      - ORDER_SERVICE_PORT=5004
      - ORDER_DB_PATH=/app/order_service.db
    volumes:
      - order_data:/app
    networks:
      - microservices-network

  # Analytics Service
  analytics:
    build: ./analytics-service
    ports:
      - "5005:5005"
    environment:
      - ANALYTICS_SERVICE_PORT=5005
      - ANALYTICS_DB_PATH=/app/analytics_service.db
    volumes:
      - analytics_data:/app
    networks:
      - microservices-network

  # IoT Service
  iot:
    build: ./iot-service
    ports:
      - "5006:5006"
    environment:
      - IOT_SERVICE_PORT=5006
      - IOT_DB_PATH=/app/iot_service.db
    volumes:
      - iot_data:/app
    networks:
      - microservices-network

  # Notification Service
  notification:
    build: ./notification-service
    ports:
      - "5007:5007"
    environment:
      - NOTIFICATION_SERVICE_PORT=5007
      - NOTIFICATION_DB_PATH=/app/notification_service.db
    volumes:
      - notification_data:/app
    networks:
      - microservices-network

  # AI Service
  ai:
    build: ./ai-service
    ports:
      - "5008:5008"
    environment:
      - AI_SERVICE_PORT=5008
      - AI_DB_PATH=/app/ai_service.db
    volumes:
      - ai_data:/app
    networks:
      - microservices-network

  # Redis (캐싱 및 세션 저장)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - microservices-network

  # PostgreSQL (메인 데이터베이스)
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=restaurant_microservices
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network

volumes:
  user_data:
  staff_data:
  inventory_data:
  order_data:
  analytics_data:
  iot_data:
  notification_data:
  ai_data:
  redis_data:
  postgres_data:

networks:
  microservices-network:
    driver: bridge 