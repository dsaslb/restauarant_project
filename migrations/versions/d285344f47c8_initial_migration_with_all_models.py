"""Initial migration with all models

Revision ID: d285344f47c8
Revises: 
Create Date: 2025-06-22 10:57:51.194962

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd285344f47c8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('branches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('branches', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_branches_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_branches_name'), ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('branch_id', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('failed_login', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_branch_id'), ['branch_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_deleted_at'), ['deleted_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_last_login'), ['last_login'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_locked_until'), ['locked_until'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('action_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('message', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('action_logs', schema=None) as batch_op:
        batch_op.create_index('idx_actionlog_action_date', ['action', 'created_at'], unique=False)
        batch_op.create_index('idx_actionlog_user_action', ['user_id', 'action'], unique=False)
        batch_op.create_index(batch_op.f('ix_action_logs_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_action_logs_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_action_logs_user_id'), ['user_id'], unique=False)

    op.create_table('approve_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=32), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=256), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('approve_logs', schema=None) as batch_op:
        batch_op.create_index('idx_approvelog_admin_date', ['admin_id', 'timestamp'], unique=False)
        batch_op.create_index('idx_approvelog_user_action', ['user_id', 'action'], unique=False)
        batch_op.create_index(batch_op.f('ix_approve_logs_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_approve_logs_admin_id'), ['admin_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_approve_logs_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_approve_logs_user_id'), ['user_id'], unique=False)

    op.create_table('attendances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('clock_in', sa.DateTime(), nullable=False),
    sa.Column('clock_out', sa.DateTime(), nullable=True),
    sa.Column('location_in', sa.String(length=100), nullable=True),
    sa.Column('location_out', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('attendances', schema=None) as batch_op:
        batch_op.create_index('idx_attendance_date_range', ['clock_in', 'clock_out'], unique=False)
        batch_op.create_index('idx_attendance_user_date', ['user_id', 'clock_in'], unique=False)
        batch_op.create_index(batch_op.f('ix_attendances_clock_in'), ['clock_in'], unique=False)
        batch_op.create_index(batch_op.f('ix_attendances_clock_out'), ['clock_out'], unique=False)
        batch_op.create_index(batch_op.f('ix_attendances_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_attendances_user_id'), ['user_id'], unique=False)

    op.create_table('cleaning_plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('plan', sa.String(length=200), nullable=True),
    sa.Column('team', sa.String(length=30), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('satisfaction', sa.Integer(), nullable=True),
    sa.Column('health', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(length=500), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('feedback', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_feedback_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_feedback_user_id'), ['user_id'], unique=False)

    op.create_table('notices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('file_type', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=30), nullable=True),
    sa.Column('is_hidden', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notices', schema=None) as batch_op:
        batch_op.create_index('idx_notice_author_category', ['author_id', 'category'], unique=False)
        batch_op.create_index('idx_notice_created', ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_notices_author_id'), ['author_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notices_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_notices_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_notices_is_hidden'), ['is_hidden'], unique=False)

    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index('idx_notification_created', ['created_at'], unique=False)
        batch_op.create_index('idx_notification_user_read', ['user_id', 'is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_is_read'), ['is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_user_id'), ['user_id'], unique=False)

    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('target_type', sa.String(length=10), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=20), nullable=True),
    sa.Column('detail', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('admin_comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.create_index('idx_report_status_category', ['status', 'category'], unique=False)
        batch_op.create_index('idx_report_target', ['target_type', 'target_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reports_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_reports_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_reports_reviewed_at'), ['reviewed_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_reports_reviewed_by'), ['reviewed_by'], unique=False)
        batch_op.create_index(batch_op.f('ix_reports_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_reports_target_id'), ['target_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reports_target_type'), ['target_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_reports_user_id'), ['user_id'], unique=False)

    op.create_table('schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('memo', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shift_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('request_date', sa.Date(), nullable=False),
    sa.Column('desired_date', sa.Date(), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('shift_requests', schema=None) as batch_op:
        batch_op.create_index('idx_shiftrequest_date_range', ['request_date', 'desired_date'], unique=False)
        batch_op.create_index('idx_shiftrequest_user_status', ['user_id', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_shift_requests_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_shift_requests_desired_date'), ['desired_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_shift_requests_request_date'), ['request_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_shift_requests_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_shift_requests_user_id'), ['user_id'], unique=False)

    op.create_table('suggestions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('answered_at', sa.DateTime(), nullable=True),
    sa.Column('is_anonymous', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('suggestions', schema=None) as batch_op:
        batch_op.create_index('idx_suggestion_answered', ['answered_at'], unique=False)
        batch_op.create_index('idx_suggestion_created', ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_suggestions_answered_at'), ['answered_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_suggestions_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_suggestions_is_anonymous'), ['is_anonymous'], unique=False)

    op.create_table('system_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('detail', sa.String(length=500), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notice_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notice_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_hidden', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['notice_id'], ['notices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notice_comments', schema=None) as batch_op:
        batch_op.create_index('idx_noticecomment_created', ['created_at'], unique=False)
        batch_op.create_index('idx_noticecomment_notice_user', ['notice_id', 'user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notice_comments_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_notice_comments_is_hidden'), ['is_hidden'], unique=False)
        batch_op.create_index(batch_op.f('ix_notice_comments_notice_id'), ['notice_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notice_comments_user_id'), ['user_id'], unique=False)

    op.create_table('notice_histories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notice_id', sa.Integer(), nullable=False),
    sa.Column('editor_id', sa.Integer(), nullable=False),
    sa.Column('before_title', sa.String(length=100), nullable=True),
    sa.Column('before_content', sa.Text(), nullable=True),
    sa.Column('before_file_path', sa.String(length=255), nullable=True),
    sa.Column('before_file_type', sa.String(length=20), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('action', sa.String(length=10), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['editor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['notice_id'], ['notices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notice_histories', schema=None) as batch_op:
        batch_op.create_index('idx_noticehistory_editor', ['editor_id'], unique=False)
        batch_op.create_index('idx_noticehistory_notice', ['notice_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notice_histories_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_notice_histories_edited_at'), ['edited_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_notice_histories_editor_id'), ['editor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notice_histories_notice_id'), ['notice_id'], unique=False)

    op.create_table('notice_reads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notice_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['notice_id'], ['notices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('notice_id', 'user_id', name='uq_notice_user')
    )
    with op.batch_alter_table('notice_reads', schema=None) as batch_op:
        batch_op.create_index('idx_noticeread_user_notice', ['user_id', 'notice_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notice_reads_notice_id'), ['notice_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notice_reads_read_at'), ['read_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_notice_reads_user_id'), ['user_id'], unique=False)

    op.create_table('comment_histories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('editor_id', sa.Integer(), nullable=False),
    sa.Column('before_content', sa.Text(), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('action', sa.String(length=10), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['notice_comments.id'], ),
    sa.ForeignKeyConstraint(['editor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comment_histories', schema=None) as batch_op:
        batch_op.create_index('idx_commenthistory_comment', ['comment_id'], unique=False)
        batch_op.create_index('idx_commenthistory_editor', ['editor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_comment_histories_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_comment_histories_comment_id'), ['comment_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_comment_histories_edited_at'), ['edited_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_comment_histories_editor_id'), ['editor_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('comment_histories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comment_histories_editor_id'))
        batch_op.drop_index(batch_op.f('ix_comment_histories_edited_at'))
        batch_op.drop_index(batch_op.f('ix_comment_histories_comment_id'))
        batch_op.drop_index(batch_op.f('ix_comment_histories_action'))
        batch_op.drop_index('idx_commenthistory_editor')
        batch_op.drop_index('idx_commenthistory_comment')

    op.drop_table('comment_histories')
    with op.batch_alter_table('notice_reads', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notice_reads_user_id'))
        batch_op.drop_index(batch_op.f('ix_notice_reads_read_at'))
        batch_op.drop_index(batch_op.f('ix_notice_reads_notice_id'))
        batch_op.drop_index('idx_noticeread_user_notice')

    op.drop_table('notice_reads')
    with op.batch_alter_table('notice_histories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notice_histories_notice_id'))
        batch_op.drop_index(batch_op.f('ix_notice_histories_editor_id'))
        batch_op.drop_index(batch_op.f('ix_notice_histories_edited_at'))
        batch_op.drop_index(batch_op.f('ix_notice_histories_action'))
        batch_op.drop_index('idx_noticehistory_notice')
        batch_op.drop_index('idx_noticehistory_editor')

    op.drop_table('notice_histories')
    with op.batch_alter_table('notice_comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notice_comments_user_id'))
        batch_op.drop_index(batch_op.f('ix_notice_comments_notice_id'))
        batch_op.drop_index(batch_op.f('ix_notice_comments_is_hidden'))
        batch_op.drop_index(batch_op.f('ix_notice_comments_created_at'))
        batch_op.drop_index('idx_noticecomment_notice_user')
        batch_op.drop_index('idx_noticecomment_created')

    op.drop_table('notice_comments')
    op.drop_table('system_logs')
    with op.batch_alter_table('suggestions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_suggestions_is_anonymous'))
        batch_op.drop_index(batch_op.f('ix_suggestions_created_at'))
        batch_op.drop_index(batch_op.f('ix_suggestions_answered_at'))
        batch_op.drop_index('idx_suggestion_created')
        batch_op.drop_index('idx_suggestion_answered')

    op.drop_table('suggestions')
    with op.batch_alter_table('shift_requests', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_shift_requests_user_id'))
        batch_op.drop_index(batch_op.f('ix_shift_requests_status'))
        batch_op.drop_index(batch_op.f('ix_shift_requests_request_date'))
        batch_op.drop_index(batch_op.f('ix_shift_requests_desired_date'))
        batch_op.drop_index(batch_op.f('ix_shift_requests_created_at'))
        batch_op.drop_index('idx_shiftrequest_user_status')
        batch_op.drop_index('idx_shiftrequest_date_range')

    op.drop_table('shift_requests')
    op.drop_table('schedule')
    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reports_user_id'))
        batch_op.drop_index(batch_op.f('ix_reports_target_type'))
        batch_op.drop_index(batch_op.f('ix_reports_target_id'))
        batch_op.drop_index(batch_op.f('ix_reports_status'))
        batch_op.drop_index(batch_op.f('ix_reports_reviewed_by'))
        batch_op.drop_index(batch_op.f('ix_reports_reviewed_at'))
        batch_op.drop_index(batch_op.f('ix_reports_created_at'))
        batch_op.drop_index(batch_op.f('ix_reports_category'))
        batch_op.drop_index('idx_report_target')
        batch_op.drop_index('idx_report_status_category')

    op.drop_table('reports')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notifications_user_id'))
        batch_op.drop_index(batch_op.f('ix_notifications_is_read'))
        batch_op.drop_index(batch_op.f('ix_notifications_created_at'))
        batch_op.drop_index('idx_notification_user_read')
        batch_op.drop_index('idx_notification_created')

    op.drop_table('notifications')
    with op.batch_alter_table('notices', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notices_is_hidden'))
        batch_op.drop_index(batch_op.f('ix_notices_created_at'))
        batch_op.drop_index(batch_op.f('ix_notices_category'))
        batch_op.drop_index(batch_op.f('ix_notices_author_id'))
        batch_op.drop_index('idx_notice_created')
        batch_op.drop_index('idx_notice_author_category')

    op.drop_table('notices')
    with op.batch_alter_table('feedback', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_feedback_user_id'))
        batch_op.drop_index(batch_op.f('ix_feedback_created_at'))

    op.drop_table('feedback')
    op.drop_table('cleaning_plan')
    with op.batch_alter_table('attendances', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_attendances_user_id'))
        batch_op.drop_index(batch_op.f('ix_attendances_created_at'))
        batch_op.drop_index(batch_op.f('ix_attendances_clock_out'))
        batch_op.drop_index(batch_op.f('ix_attendances_clock_in'))
        batch_op.drop_index('idx_attendance_user_date')
        batch_op.drop_index('idx_attendance_date_range')

    op.drop_table('attendances')
    with op.batch_alter_table('approve_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_approve_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_approve_logs_timestamp'))
        batch_op.drop_index(batch_op.f('ix_approve_logs_admin_id'))
        batch_op.drop_index(batch_op.f('ix_approve_logs_action'))
        batch_op.drop_index('idx_approvelog_user_action')
        batch_op.drop_index('idx_approvelog_admin_date')

    op.drop_table('approve_logs')
    with op.batch_alter_table('action_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_action_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_action_logs_created_at'))
        batch_op.drop_index(batch_op.f('ix_action_logs_action'))
        batch_op.drop_index('idx_actionlog_user_action')
        batch_op.drop_index('idx_actionlog_action_date')

    op.drop_table('action_logs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_status'))
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_locked_until'))
        batch_op.drop_index(batch_op.f('ix_users_last_login'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_deleted_at'))
        batch_op.drop_index(batch_op.f('ix_users_created_at'))
        batch_op.drop_index(batch_op.f('ix_users_branch_id'))

    op.drop_table('users')
    with op.batch_alter_table('branches', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_branches_name'))
        batch_op.drop_index(batch_op.f('ix_branches_created_at'))

    op.drop_table('branches')
    # ### end Alembic commands ###
