"""공지 file_type, 댓글 NoticeComment 추가

Revision ID: e35e4092e71b
Revises: 039947c85d61
Create Date: 2025-06-20 14:38:49.170117

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e35e4092e71b'
down_revision = '039947c85d61'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('suggestions',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('content', sa.Text(), nullable=False),
    # sa.Column('answer', sa.Text(), nullable=True),
    # sa.Column('created_at', sa.DateTime(), nullable=True),
    # sa.Column('answered_at', sa.DateTime(), nullable=True),
    # sa.Column('is_anonymous', sa.Boolean(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # with op.batch_alter_table('suggestions', schema=None) as batch_op:
    #     batch_op.create_index('idx_suggestion_answered', ['answered_at'], unique=False)
    #     batch_op.create_index('idx_suggestion_created', ['created_at'], unique=False)
    #     batch_op.create_index(batch_op.f('ix_suggestions_answered_at'), ['answered_at'], unique=False)
    #     batch_op.create_index(batch_op.f('ix_suggestions_created_at'), ['created_at'], unique=False)
    #     batch_op.create_index(batch_op.f('ix_suggestions_is_anonymous'), ['is_anonymous'], unique=False)

    # op.create_table('notice_comments',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('notice_id', sa.Integer(), nullable=False),
    # sa.Column('user_id', sa.Integer(), nullable=False),
    # sa.Column('content', sa.Text(), nullable=False),
    # sa.Column('created_at', sa.DateTime(), nullable=True),
    # sa.ForeignKeyConstraint(['notice_id'], ['notices.id'], ),
    # sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # with op.batch_alter_table('notice_comments', schema=None) as batch_op:
    #     batch_op.create_index(batch_op.f('ix_notice_comments_created_at'), ['created_at'], unique=False)
    #     batch_op.create_index(batch_op.f('ix_notice_comments_notice_id'), ['notice_id'], unique=False)
    #     batch_op.create_index(batch_op.f('ix_notice_comments_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('action_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ip_address', sa.String(length=45), nullable=True))
        batch_op.add_column(sa.Column('user_agent', sa.String(length=200), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('action',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.create_index('idx_actionlog_action_date', ['action', 'created_at'], unique=False)
        batch_op.create_index('idx_actionlog_user_action', ['user_id', 'action'], unique=False)
        batch_op.create_index(batch_op.f('ix_action_logs_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_action_logs_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_action_logs_user_id'), ['user_id'], unique=False)
        batch_op.create_foreign_key('fk_action_logs_user', 'users', ['user_id'], ['id'])

    with op.batch_alter_table('approve_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ip_address', sa.String(length=45), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('action',
               existing_type=sa.VARCHAR(length=32),
               nullable=False)
        batch_op.alter_column('admin_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_index('idx_approvelog_admin_date', ['admin_id', 'timestamp'], unique=False)
        batch_op.create_index('idx_approvelog_user_action', ['user_id', 'action'], unique=False)
        batch_op.create_index(batch_op.f('ix_approve_logs_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_approve_logs_admin_id'), ['admin_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_approve_logs_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_approve_logs_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('attendances', schema=None) as batch_op:
        batch_op.add_column(sa.Column('location_in', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('location_out', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('clock_in',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.create_index('idx_attendance_date_range', ['clock_in', 'clock_out'], unique=False)
        batch_op.create_index('idx_attendance_user_date', ['user_id', 'clock_in'], unique=False)
        batch_op.create_index(batch_op.f('ix_attendances_clock_in'), ['clock_in'], unique=False)
        batch_op.create_index(batch_op.f('ix_attendances_clock_out'), ['clock_out'], unique=False)
        batch_op.create_index(batch_op.f('ix_attendances_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_attendances_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('branches', schema=None) as batch_op:
        batch_op.add_column(sa.Column('address', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('phone', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.create_index(batch_op.f('ix_branches_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_branches_name'), ['name'], unique=True)

    with op.batch_alter_table('feedback', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category', sa.String(length=50), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('comment',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=500),
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_feedback_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_feedback_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('notices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('file_type', sa.String(length=20), nullable=True))

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('last_login', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('login_attempts', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('locked_until', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_users_branch_id'), ['branch_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_deleted_at'), ['deleted_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_last_login'), ['last_login'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_locked_until'), ['locked_until'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_status'))
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_locked_until'))
        batch_op.drop_index(batch_op.f('ix_users_last_login'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_deleted_at'))
        batch_op.drop_index(batch_op.f('ix_users_created_at'))
        batch_op.drop_index(batch_op.f('ix_users_branch_id'))
        batch_op.drop_column('locked_until')
        batch_op.drop_column('login_attempts')
        batch_op.drop_column('last_login')
        batch_op.drop_column('email')

    with op.batch_alter_table('notices', schema=None) as batch_op:
        batch_op.drop_column('file_type')

    with op.batch_alter_table('feedback', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_feedback_user_id'))
        batch_op.drop_index(batch_op.f('ix_feedback_created_at'))
        batch_op.alter_column('comment',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('category')

    with op.batch_alter_table('branches', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_branches_name'))
        batch_op.drop_index(batch_op.f('ix_branches_created_at'))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('phone')
        batch_op.drop_column('address')

    with op.batch_alter_table('attendances', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_attendances_user_id'))
        batch_op.drop_index(batch_op.f('ix_attendances_created_at'))
        batch_op.drop_index(batch_op.f('ix_attendances_clock_out'))
        batch_op.drop_index(batch_op.f('ix_attendances_clock_in'))
        batch_op.drop_index('idx_attendance_user_date')
        batch_op.drop_index('idx_attendance_date_range')
        batch_op.alter_column('clock_in',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('notes')
        batch_op.drop_column('location_out')
        batch_op.drop_column('location_in')

    with op.batch_alter_table('approve_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_approve_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_approve_logs_timestamp'))
        batch_op.drop_index(batch_op.f('ix_approve_logs_admin_id'))
        batch_op.drop_index(batch_op.f('ix_approve_logs_action'))
        batch_op.drop_index('idx_approvelog_user_action')
        batch_op.drop_index('idx_approvelog_admin_date')
        batch_op.alter_column('admin_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('action',
               existing_type=sa.VARCHAR(length=32),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('ip_address')

    with op.batch_alter_table('action_logs', schema=None) as batch_op:
        batch_op.drop_constraint('fk_action_logs_user', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_action_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_action_logs_created_at'))
        batch_op.drop_index(batch_op.f('ix_action_logs_action'))
        batch_op.drop_index('idx_actionlog_user_action')
        batch_op.drop_index('idx_actionlog_action_date')
        batch_op.alter_column('action',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('user_agent')
        batch_op.drop_column('ip_address')

    # with op.batch_alter_table('notice_comments', schema=None) as batch_op:
    #     batch_op.drop_index(batch_op.f('ix_notice_comments_user_id'))
    #     batch_op.drop_index(batch_op.f('ix_notice_comments_notice_id'))
    #     batch_op.drop_index(batch_op.f('ix_notice_comments_created_at'))

    # op.drop_table('notice_comments')
    # with op.batch_alter_table('suggestions', schema=None) as batch_op:
    #     batch_op.drop_index(batch_op.f('ix_suggestions_is_anonymous'))
    #     batch_op.drop_index(batch_op.f('ix_suggestions_created_at'))
    #     batch_op.drop_index(batch_op.f('ix_suggestions_answered_at'))
    #     batch_op.drop_index('idx_suggestion_created')
    #     batch_op.drop_index('idx_suggestion_answered')

    # op.drop_table('suggestions')
    # ### end Alembic commands ###
